Unit_name: Intro to Golang & Basic Concurrency
Page_name: A touch of concurrency

1. Consider the following Go code snippet. What does it do?
    ```go
    go func() {
        fmt.Println("Hello, Goroutine!")
    }()
    ```
    A) It prints "Hello, Goroutine!" in a new thread.
    - Correct. The `go` keyword runs the function in a new Goroutine - a lightweight thread managed by the Go runtime.
    B) It will not print anything since there is no call to a wait function.
    - Incorrect. While it's true that the main function may terminate before the Goroutine gets to run (thus never printing anything), this code intends to print a message in a new Goroutine.
    C) It results in a compile error.
    - Incorrect. The code is valid and runs without compilation errors.
